{"ast":null,"code":"var _jsxFileName = \"/home/kirito/web_develop/video-sync-app/src/VideoSyncApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoSyncApp() {\n  _s();\n  const [verificationCode, setVerificationCode] = useState('');\n  const [videoUrl, setVideoUrl] = useState('');\n  const videoPlayerRef = useRef(null);\n  useEffect(() => {\n    if (videoUrl) {\n      videoPlayerRef.current.src = videoUrl;\n    }\n  }, [videoUrl]);\n  const handleConnect = () => {\n    fetch('http://localhost:8080/verify', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        verificationCode\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        // Verification successful, set video URL\n        setVideoUrl(data.videoUrl);\n        // Establish WebSocket connection for synchronization\n        const socket = new WebSocket('ws://localhost:8080');\n        socket.onopen = () => {\n          socket.send(JSON.stringify({\n            verificationCode,\n            action: 'join'\n          }));\n        };\n        socket.onmessage = event => {\n          const message = JSON.parse(event.data);\n          if (message.action === 'sync') {\n            // Handle synchronization logic here\n          }\n        };\n      } else {\n        alert('Invalid verification code');\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n      ref: videoPlayerRef,\n      src: \"\",\n      scrolling: \"no\",\n      border: \"0\",\n      frameborder: \"no\",\n      framespacing: \"0\",\n      allowfullscreen: \"true\",\n      width: \"640\",\n      height: \"480\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: verificationCode,\n      onChange: e => setVerificationCode(e.target.value),\n      placeholder: \"Enter verification code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConnect,\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(VideoSyncApp, \"Vwnpqk0szoPLOR42P8gnC41jz8M=\");\n_c = VideoSyncApp;\nexport default VideoSyncApp;\nvar _c;\n$RefreshReg$(_c, \"VideoSyncApp\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","VideoSyncApp","_s","verificationCode","setVerificationCode","videoUrl","setVideoUrl","videoPlayerRef","current","src","handleConnect","fetch","method","headers","body","JSON","stringify","then","response","json","data","success","socket","WebSocket","onopen","send","action","onmessage","event","message","parse","alert","catch","error","console","children","ref","scrolling","border","frameborder","framespacing","allowfullscreen","width","height","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/kirito/web_develop/video-sync-app/src/VideoSyncApp.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nfunction VideoSyncApp() {\n    const [verificationCode, setVerificationCode] = useState('');\n    const [videoUrl, setVideoUrl] = useState('');\n    const videoPlayerRef = useRef(null);\n\n    useEffect(() => {\n        if (videoUrl) {\n            videoPlayerRef.current.src = videoUrl;\n        }\n    }, [videoUrl]);\n\n    const handleConnect = () => {\n        fetch('http://localhost:8080/verify', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ verificationCode })\n        })\n        .then(response => response.json())\n        .then(data => {\n            if (data.success) {\n                // Verification successful, set video URL\n                setVideoUrl(data.videoUrl);\n                // Establish WebSocket connection for synchronization\n                const socket = new WebSocket('ws://localhost:8080');\n                socket.onopen = () => {\n                    socket.send(JSON.stringify({ verificationCode, action: 'join' }));\n                };\n                socket.onmessage = (event) => {\n                    const message = JSON.parse(event.data);\n                    if (message.action === 'sync') {\n                        // Handle synchronization logic here\n                    }\n                };\n            } else {\n                alert('Invalid verification code');\n            }\n        }).catch(error => {\n            console.error('Error:', error);\n        });\n    };\n\n    return (\n        <div>\n            <iframe ref={videoPlayerRef} src=\"\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" width=\"640\" height=\"480\"></iframe>\n            <input \n                type=\"text\" \n                value={verificationCode} \n                onChange={(e) => setVerificationCode(e.target.value)} \n                placeholder=\"Enter verification code\"\n            />\n            <button onClick={handleConnect}>Connect</button>\n        </div>\n    );\n}\n\nexport default VideoSyncApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}